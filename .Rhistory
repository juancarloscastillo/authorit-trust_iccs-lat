mergeiccs= mergeiccs%>%
mutate(parental_education=s_hisced) %>%
mutate(books_at_home=s_homelit) %>%
mutate(gender=s_gender) %>%
mutate(political_discussion=s_poldisc)%>%
mutate(trust_average  = ((nac_gob + courts + parliament + pol_parties+ police + local_gob)/6), na.rm=T) %>% #TRUST INDEX
mutate(authori_average  = (dicta7 +  dicta_safety + dicta_benefits)/3)
mergesvy <-  mergeiccs %>%
as_survey_design(
strata = jkzones,
weights = totwgts,
ids = jkreps,
nest = TRUE)
mergesvy <-  mergeiccs %>%
as_survey_design(
strata = jkzones,
weights = totwgts,
ids = jkreps,
nest = TRUE)
trust <- mergesvy %>%
dplyr::group_by(country) %>%
summarize(govern = survey_mean(nac_gob, na.rm=TRUE), parliam = survey_mean(parliament, na.rm=TRUE), polpar = survey_mean(pol_parties, na.rm=TRUE), courts = survey_mean(courts, na.rm=TRUE), index = survey_mean(s_intrust, na.rm=TRUE), local = survey_mean(local_gob, na.rm=TRUE), police = survey_mean(police, na.rm=TRUE))%>%
arrange(index) %>%
mutate(country = factor(country, levels = .$country))
trust
#png("trust_items.png", width=800, height=500)
ggplot(trust, aes(, country)) +
geom_point(aes(govern, shape="a. Government"), size=3) +
#geom_point(aes(local, shape="a. Local Government"), size=3) +
geom_point(aes(parliam, shape="b. Parliament"), size=3)+
geom_point(aes(polpar, shape="c. Political parties"), size=3)+
geom_point(aes(courts, shape="d. Courts"), size=3)+
#geom_point(aes(police, shape="d. Police"), size=3)+
theme(legend.title=element_blank())+
#geom_point(aes(index, shape="e. Trust_average"))+
ggtitle("", sub = "") + ylab("") + xlab("Average") + xlim(1,4)
#png("trust_items.png", width=800, height=500)
ggplot(trust, aes(, country)) +
geom_point(aes(govern, shape="a. Government"), size=3) +
#geom_point(aes(local, shape="a. Local Government"), size=3) +
geom_point(aes(parliam, shape="b. Parliament"), size=3)+
geom_point(aes(polpar, shape="d. Political parties"), size=3)+
geom_point(aes(courts, shape="c. Courts"), size=3)+
#geom_point(aes(police, shape="d. Police"), size=3)+
theme(legend.title=element_blank())+
#geom_point(aes(index, shape="e. Trust_average"))+
ggtitle("", sub = "") + ylab("") + xlab("Average") + xlim(1,4)
#png("trust_items.png", width=800, height=500)
ggplot(trust, aes(, country)) +
geom_point(aes(govern, shape="a. Government"), size=3) +
#geom_point(aes(local, shape="a. Local Government"), size=3) +
geom_point(aes(parliam, shape="b. Parliament"), size=3)+
geom_point(aes(courts, shape="c. Courts"), size=3)+
geom_point(aes(polpar, shape="d. Political parties"), size=3)+
#geom_point(aes(police, shape="d. Police"), size=3)+
theme(legend.title=element_blank())+
#geom_point(aes(index, shape="e. Trust_average"))+
ggtitle("", sub = "") + ylab("") + xlab("Average") + xlim(1,4)
trust <- mergesvy %>%
dplyr::group_by(country) %>%
summarize(govern = survey_mean(nac_gob, na.rm=TRUE), parliam = survey_mean(parliament, na.rm=TRUE), polpar = survey_mean(pol_parties, na.rm=TRUE), courts = survey_mean(courts, na.rm=TRUE), index = survey_mean(s_intrust, na.rm=TRUE), local = survey_mean(local_gob, na.rm=TRUE), police = survey_mean(police, na.rm=TRUE))%>%
arrange(index) %>%
mutate(country = factor(country, levels = .$country))
trust <- mergesvy %>%
dplyr::group_by(country) %>%
summarize(govern = survey_mean(nac_gob, na.rm=TRUE), parliam = survey_mean(parliament, na.rm=TRUE), polpar = survey_mean(pol_parties, na.rm=TRUE), courts = survey_mean(courts, na.rm=TRUE), index = survey_mean(s_intrust, na.rm=TRUE), local = survey_mean(local_gob, na.rm=TRUE), police = survey_mean(police, na.rm=TRUE))%>%
arrange(index) %>%
mutate(country = factor(country, levels = .$country))
trust
#png("trust_items.png", width=800, height=500)
ggplot(trust, aes(, country)) +
geom_point(aes(govern, shape="a. Government"), size=3) +
#geom_point(aes(local, shape="a. Local Government"), size=3) +
geom_point(aes(parliam, shape="b. Parliament"), size=3)+
geom_point(aes(courts, shape="c. Courts"), size=3)+
geom_point(aes(polpar, shape="d. Political parties"), size=3)+
#geom_point(aes(police, shape="d. Police"), size=3)+
theme(legend.title=element_blank())+
#geom_point(aes(index, shape="e. Trust_average"))+
ggtitle("", sub = "") + ylab("") + xlab("Average") + xlim(1,4)
png("trust_items.png", width=800, height=500)
png("trust_items.png", width=800, height=500)
ggplot(trust, aes(, country)) +
geom_point(aes(govern, shape="a. Government"), size=3) +
#geom_point(aes(local, shape="a. Local Government"), size=3) +
geom_point(aes(parliam, shape="b. Parliament"), size=3)+
geom_point(aes(courts, shape="c. Courts"), size=3)+
geom_point(aes(polpar, shape="d. Political parties"), size=3)+
#geom_point(aes(police, shape="d. Police"), size=3)+
theme(legend.title=element_blank())+
#geom_point(aes(index, shape="e. Trust_average"))+
ggtitle("", sub = "") + ylab("") + xlab("Average") + xlim(1,4)
dev.off()
dev.off()
png("trust_items.png", width=800, height=500)
ggplot(trust, aes(, country)) +
geom_point(aes(govern, shape="a. Government"), size=3) +
#geom_point(aes(local, shape="a. Local Government"), size=3) +
geom_point(aes(parliam, shape="b. Parliament"), size=3)+
geom_point(aes(courts, shape="c. Courts"), size=3)+
geom_point(aes(polpar, shape="d. Political parties"), size=3)+
#geom_point(aes(police, shape="d. Police"), size=3)+
theme(legend.title=element_blank())+
#geom_point(aes(index, shape="e. Trust_average"))+
ggtitle("", sub = "") + ylab("") + xlab("Average") + xlim(1,4)
dev.off()
cfa_1 <- '
#latent variables
#latent variables
poltrust =~ nac_gob + courts + parliament + pol_parties
authori =~ dicta7 + dicta_safety + dicta_benefits
'
fit_1 <- cfa(cfa_1,data=mergeiccs)
standardizedSolution(fit_1)
fitMeasures(fit_1, c("chisq", "df", "pvalue", "cfi", "tli", "rmsea"))
## add predicted variable to data base
head(lavPredict(fit_1))
idx <- lavInspect(fit_1, "case.idx")
fscores <- lavPredict(fit_1)
## loop over factors
for (fs in colnames(fscores)) {
mergeiccs[idx, fs] <- fscores[ , fs]
}
## Rescaling variable trust to mean=50, sd=10
a=score.transform(mergeiccs$pol_trust, mu.new = 50, sd.new = 10, normalize = TRUE)
#names(a)
#head(a)
a1=as.data.frame(a)
#View(a1)
mergeiccs$trust=a1[, "new.scores"]
names(a)
head(a)
cfa_1 <- '
#latent variables
#latent variables
poltrust =~ nac_gob + courts + parliament + pol_parties
authori =~ dicta7 + dicta_safety + dicta_benefits
'
fit_1 <- cfa(cfa_1,data=mergeiccs)
standardizedSolution(fit_1)
fitMeasures(fit_1, c("chisq", "df", "pvalue", "cfi", "tli", "rmsea"))
## add predicted variable to data base
head(lavPredict(fit_1))
cfa_1 <- '
#latent variables
#latent variables
pol_trust =~ nac_gob + courts + parliament + pol_parties
authori =~ dicta7 + dicta_safety + dicta_benefits
'
fit_1 <- cfa(cfa_1,data=mergeiccs)
#Load Data processing
load("C:/Users/Daniel Miranda/Dropbox (MIDE)/MIDEUC/1.publicaciones/authorit_trust/authorit-trust_iccs-lat/Data/Analysis/mergeiccs.Rdata")
names(mergeiccs)
names(mergeiccs)
mergeiccs$idsch= mergeiccs %>%
group_indices(idcountry, time, idschool)
mergeiccs= mergeiccs%>%
mutate(parental_education=s_hisced) %>%
mutate(books_at_home=s_homelit) %>%
mutate(gender=s_gender) %>%
mutate(political_discussion=s_poldisc)%>%
mutate(trust_average  = ((nac_gob + courts + parliament + pol_parties+ police + local_gob)/6), na.rm=T) %>% #TRUST INDEX
mutate(authori_average  = (dicta7 +  dicta_safety + dicta_benefits)/3)
cfa_1 <- '
#latent variables
#latent variables
pol_trust =~ nac_gob + courts + parliament + pol_parties
authori =~ dicta7 + dicta_safety + dicta_benefits
'
fit_1 <- cfa(cfa_1,data=mergeiccs)
standardizedSolution(fit_1)
fitMeasures(fit_1, c("chisq", "df", "pvalue", "cfi", "tli", "rmsea"))
## add predicted variable to data base
head(lavPredict(fit_1))
idx <- lavInspect(fit_1, "case.idx")
fscores <- lavPredict(fit_1)
str(fscores)
## loop over factors
for (fs in colnames(fscores)) {
mergeiccs[idx, fs] <- fscores[ , fs]
}
head(mergeiccs)
## Rescaling variable trust to mean=50, sd=10
a=score.transform(mergeiccs$pol_trust, mu.new = 50, sd.new = 10, normalize = TRUE)
names(a)
head(a)
head(a)
a1=as.data.frame(a)
#View(a1
View(a1)
#View(a1)
mergeiccs$trust=a1[, "new.scores"]
mergeiccs[mapply(is.infinite, mergeiccs)] <- NA
## Rescaling variable authoritarianism to mean=50, sd=10
b=score.transform(mergeiccs$authori, mu.new = 50, sd.new = 10, normalize = TRUE)
#names(b)
#head(b)
b1=as.data.frame(b)
#View(a1)
mergeiccs$supdicta=b1[, "new.scores"]
mergeiccs[mapply(is.infinite, mergeiccs)] <- NA
## Correlational checks
#names(mergeiccs)
corr1=mergeiccs %>%
dplyr::select(pv1civ, s_intrust, pol_trust, trust)
#skim(corr1)
cor(corr1)
corr=na.omit(corr1)
corMat  <- round(cor(corr1), 2) # estimar matriz pearson
corMat # muestra matriz
## Correlational checks
#names(mergeiccs)
corr1=mergeiccs %>%
dplyr::select(pv1civ, s_intrust, pol_trust, trust)
skim(corr1)
cor(corr1)
corr=na.omit(corr1)
corMat  <- round(cor(corr1), 2) # estimar matriz pearson
corMat # muestra matriz
mergeiccs[mapply(is.infinite, mergeiccs)] <- NA
## Correlational checks
#names(mergeiccs)
corr1=mergeiccs %>%
dplyr::select(pv1civ, s_intrust, pol_trust, trust)
skim(corr1)
corMat  <- round(cor(corr1), 2) # estimar matriz pearson
corMat # muestra matriz
corr1=na.omit(corr1)
corMat  <- round(cor(corr1), 2) # estimar matriz pearson
corMat # muestra matriz
## Correlational checks
#names(mergeiccs)
corr2=mergeiccs %>%
dplyr::select(pv1civ, l_autgov, authori_average, supdicta)
#skim(corr)
cor(corr2)
corr2=na.omit(corr2)
corMat  <- round(cor(corr2), 2) # estimar matriz pearson
corMat # muestra matriz
my_data <- mergeiccs[, c("pv1civ", "trust", "supdicta", "country")]
#png("correlations.png", width=1000, height=500)
ggpairs(my_data, title="corrlations between scales", columns = 1:3, ggplot2::aes(colour=country), columnLabels = c("Civic knowledge", "Trust", "Authoritarianism"))
## add predicted variable to data base
head(lavPredict(fit_1))
idx <- lavInspect(fit_1, "case.idx")
fscores <- lavPredict(fit_1)
str(fscores)
my_data <- mergeiccs[, c("pv1civ", "pol_trust", "authori", "country")]
#png("correlations.png", width=1000, height=500)
ggpairs(my_data, title="corrlations between scales", columns = 1:3, ggplot2::aes(colour=country), columnLabels = c("Civic knowledge", "Trust", "Authoritarianism"))
standardizedSolution(fit_2)
standardizedSolution(fit_1)
## Rescaling variable trust to mean=50, sd=10
a1=score.transform(mergeiccs$pol_trust, mu.new = 50, sd.new = 10, normalize = TRUE)
## Rescaling variable trust to mean=50, sd=10
a=score.transform(mergeiccs$pol_trust, mu.new = 50, sd.new = 10, normalize = TRUE)
names(a)
#head(a)
a1=as.data.frame(a)
View(a1)
## Rescaling variable trust to mean=50, sd=10
a=score.transform(mergeiccs$pol_trust, mu.new = 50, sd.new = 10, normalize = F)
names(a)
#head(a)
a1=as.data.frame(a)
View(a1)
## Rescaling variable trust to mean=50, sd=10
help(score.transform)
a=score.transform(mergeiccs$pol_trust, mu.new = 50, sd.new = 10, normalize = FALSE)
names(a)
#head(a)
a1=as.data.frame(a)
View(a1)
mergeiccs$trust=a1[, "new.scores"]
mergeiccs[mapply(is.infinite, mergeiccs)] <- NA
## Rescaling variable authoritarianism to mean=50, sd=10
b=score.transform(mergeiccs$authori, mu.new = 50, sd.new = 10, normalize = FALSE)
#names(b)
#head(b)
b1=as.data.frame(b)
#View(a1)
mergeiccs$supdicta=b1[, "new.scores"]
mergeiccs[mapply(is.infinite, mergeiccs)] <- NA
## Correlational checks
#names(mergeiccs)
corr1=mergeiccs %>%
dplyr::select(pv1civ, s_intrust, pol_trust, trust)
skim(corr1)
cor(corr1)
corr1=na.omit(corr1)
corMat  <- round(cor(corr1), 2) # estimar matriz pearson
corMat # muestra matriz
skim(corr1)
## Correlational checks
#names(mergeiccs)
corr1=mergeiccs %>%
dplyr::select(pv1civ, s_intrust, pol_trust, trust)
skim(corr1)
## Rescaling variable trust to mean=50, sd=10
#help(score.transform)
a=score.transform(mergeiccs$pol_trust, mu.new = 50, sd.new = 10)
names(a)
#head(a)
a1=as.data.frame(a)
View(a1)
head(mergeiccs)
mu.old <- mean(mergeiccs$pol_trust)
sd.old <- sd(mergeiccs$pol_trust)
scores.new <- (mergeiccs$pol_trust - mu.old)/sd.old
score-new
score.new
scores.new
scores.new
mu.old <- mean(mergeiccs$pol_trust)
mu.old
sd.old
skim(mergeiccs)
mu.old <- mean(mergeiccs$pol_trust, na.omit)
mu.old <- mean(mergeiccs$pol_trust, na.rm=TRUE)
mu.old
sd.old <- sd(mergeiccs$pol_trust, na.rm=TRUE)
sd.old
scores.new <- (mergeiccs$pol_trust - mu.old)/sd.old
scores.new
scores.trust <- (scores.new*10) + 50
scores.trust
## Rescaling
mu.old <- mean(mergeiccs$pol_trust, na.rm=TRUE)
# mu.old
sd.old <- sd(mergeiccs$pol_trust, na.rm=TRUE)
#  sd.old
scores.new <- (mergeiccs$pol_trust - mu.old)/sd.old
mergeicc$trust <- (scores.new*10) + 50
mergeiccs$trust <- (scores.new*10) + 50
## Correlational checks
#names(mergeiccs)
corr1=mergeiccs %>%
dplyr::select(pv1civ, s_intrust, pol_trust, trust)
skim(corr1)
cor(corr1)
corr1=na.omit(corr1)
corMat  <- round(cor(corr1), 2) # estimar matriz pearson
corMat # muestra matriz
## Rescaling trust mean=50, sd=10
mu.old <- mean(mergeiccs$authori, na.rm=TRUE)
mu.old
#mu.old
sd.old <- sd(mergeiccs$authori, na.rm=TRUE)
#sd.old
scores.new <- (mergeiccs$authori - mu.old)/sd.old
mergeiccs$supdicta <- (scores.new*10) + 50
## Correlational checks
#names(mergeiccs)
corr2=mergeiccs %>%
dplyr::select(pv1civ, l_autgov, authori_average, supdicta)
#skim(corr)
cor(corr2)
corr2=na.omit(corr2)
corMat  <- round(cor(corr2), 2) # estimar matriz pearson
corMat # muestra matriz
## Correlational checks
#names(mergeiccs)
corr2=mergeiccs %>%
dplyr::select(pv1civ, l_autgov, authori, supdicta)
#skim(corr)
cor(corr2)
corr2=na.omit(corr2)
corMat  <- round(cor(corr2), 2) # estimar matriz pearson
corMat # muestra matriz
my_data <- mergeiccs[, c("pv1civ", "trust", "supdicta", "country")]
#png("correlations.png", width=1000, height=500)
ggpairs(my_data, title="corrlations between scales", columns = 1:3, ggplot2::aes(colour=country), columnLabels = c("Civic knowledge", "Trust", "Authoritarianism"))
png("correlations.png", width=1000, height=500)
ggpairs(my_data, title="corrlations between scales", columns = 1:3, ggplot2::aes(colour=country), columnLabels = c("Civic knowledge", "Trust", "Authoritarianism"))
dev.off()
png("correlations.png", width=1000, height=500)
ggpairs(my_data, title="correlations between scales", columns = 1:3, ggplot2::aes(colour=country), columnLabels = c("Civic knowledge", "Trust", "Authoritarianism"))
dev.off()
png("trust_country.png", width=1000, height=500)
ggplot(mergeiccs, aes(fill=factor(country), y=trust, x=factor(time))) +
coord_cartesian(ylim=c(40, 60))+
stat_summary(fun= "mean", geom = "bar")+
#geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T, option = "E") +
ggtitle("Levels of trust") +
facet_grid(.~country) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
dev.off()
png("aut_country.png", width=1000, height=500)
ggplot(mergeiccs, aes(fill=factor(country), y=supdicta, x=factor(time))) +
coord_cartesian(ylim=c(40, 60))+
stat_summary(fun= "mean", geom = "bar")+
#geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T, option = "E") +
ggtitle("Levels of authoritarianism") +
facet_grid(.~country) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
dev.off()
mergeiccs$Country= factor(mergeiccs$idcountry, levels=c(152, 170, 214, 320, 484, 600, 604), labels= c("Chile", "Colombia", "Dominicana",  "Guatemala", "Mexico", "Peru", "Paraguay"))
mergeiccs= mergeiccs%>%
mutate(civic_know100=pv1civ/100)
m0 <- lmer(supdicta ~ 1  +  (1 | idsch),  data=mergeiccs )
m1 <- lmer(supdicta ~ civic_know100 +  (1 | idsch),  data=mergeiccs )
m2 <- lmer(supdicta ~ civic_know100 + parental_education + books_at_home + gender + political_discussion +  (1 | idsch),  data=mergeiccs)
m3 <- lmer(supdicta ~ civic_know100 + parental_education + books_at_home + gender + political_discussion + factor(time) + factor(Country)+ (1 | idsch),  data=mergeiccs )
m4 <- lmer(supdicta ~ civic_know100 + parental_education + books_at_home + gender + political_discussion + factor(time) * factor(idcountry)+ (1 | idsch),  data=mergeiccs )
tab_model(m0, m1, m2, m3 ,show.ci = FALSE, dv.labels = c("M0: Null","M1: Authoritarianism", "M2: Authoritarianism", "M3: Authoritarianism"), auto.label =TRUE)
m0a <- lmer(trust ~ 1 +  (1 | idsch),  data=mergeiccs )
m2a <- lmer(trust ~ civic_know100 + parental_education + books_at_home + gender + political_discussion +  (1 | idsch),  data=mergeiccs)
m2a <- lmer(trust ~ civic_know100 + parental_education + books_at_home + gender + political_discussion +  (1 | idsch),  data=mergeiccs)
m3a <- lmer(trust ~ civic_know100 + parental_education + books_at_home + gender + political_discussion + factor(time) + factor(Country)+ (1 | idsch),  data=mergeiccs )
m3a <- lmer(trust ~ civic_know100 + parental_education + books_at_home + gender + political_discussion + factor(time) + factor(Country)+ (1 | idsch),  data=mergeiccs )
m4a <- lmer(trust ~ civic_know100 + parental_education + books_at_home + gender + political_discussion + factor(time) * factor(Country)+ (1 | idsch),  data=mergeiccs )
tab_model(m0a, m1a, m2a, m3a ,show.ci = FALSE, dv.labels = c("M0: Null","M1: Trust", "M2: Trust", "M3: Trust") , auto.label = TRUE)
fitMeasures(fit_2, c("chisq", "df", "pvalue", "cfi", "tli", "rmsea"))
cfa_2 <- '
#latent variables
#latent variables
authori =~ dicta7 + dicta_safety + dicta_benefits
'
fit_2 <- cfa(cfa_2,data=mergeiccs)
#Paquetes
library(knitr)
library(DT)
library(plyr)
library(dplyr)
library(haven)
library(texreg)
library(xtable)
library(kableExtra)
library(ggplot2)
library(psych)
library(purrr)
library(tidyr)
library(sjmisc)
library(Hmisc)
library(reshape)
library(VIM)
library(stringr)
library(skimr)
library(lme4)
library(broom)
library(survey)
library(srvyr)
library(stargazer)
library(countrycode)
library(MplusAutomation)
library(GGally)
library(lme4)
library(sjPlot)
library(viridis)
library(hrbrthemes)
pacman::p_load(stargazer, # Reporte a latex
sjPlot, sjmisc, # reporte y gráficos
corrplot, # grafico correlaciones
xtable, # Reporte a latex
Hmisc, # varias funciones
psych, # fa y principal factors
psy, # scree plot function
nFactors, # parallel
GPArotation, devtools, CTT, lavaan, texreg)
#Load Data processing
load("C:/Users/Daniel Miranda/Dropbox (MIDE)/MIDEUC/1.publicaciones/authorit_trust/authorit-trust_iccs-lat/Data/Analysis/mergeiccs.Rdata")
names(mergeiccs)
names(mergeiccs)
mergeiccs$idsch= mergeiccs %>%
group_indices(idcountry, time, idschool)
mergeiccs$idsch= mergeiccs %>%
group_indices(idcountry, time, idschool)
mergeiccs= mergeiccs%>%
mutate(parental_education=s_hisced) %>%
mutate(books_at_home=s_homelit) %>%
mutate(gender=s_gender) %>%
mutate(political_discussion=s_poldisc)%>%
mutate(trust_average  = ((nac_gob + courts + parliament + pol_parties+ police + local_gob)/6), na.rm=T) %>% #TRUST INDEX
mutate(authori_average  = (dicta7 +  dicta_safety + dicta_benefits)/3)
cfa_1 <- '
#latent variables
#latent variables
pol_trust =~ nac_gob + courts + parliament + pol_parties
authori =~ dicta7 + dicta_safety + dicta_benefits
'
fit_1 <- cfa(cfa_1,data=mergeiccs)
standardizedSolution(fit_1)
fitMeasures(fit_1, c("chisq", "df", "pvalue", "cfi", "tli", "rmsea"))
#png("trust_items.png", width=800, height=500)
ggplot(trust, aes(, country)) +
geom_point(aes(govern, shape="a. Government"), size=3) +
#geom_point(aes(local, shape="a. Local Government"), size=3) +
geom_point(aes(parliam, shape="b. Parliament"), size=3)+
geom_point(aes(courts, shape="c. Courts"), size=3)+
geom_point(aes(polpar, shape="d. Political parties"), size=3)+
#geom_point(aes(police, shape="d. Police"), size=3)+
theme(legend.title=element_blank())+
#geom_point(aes(index, shape="e. Trust_average"))+
ggtitle("", sub = "") + ylab("") + xlab("Average") + xlim(1,4)
png("trust_items.png", width=800, height=500)
ggplot(trust, aes(, country)) +
geom_point(aes(govern, shape="a. Government"), size=3) +
#geom_point(aes(local, shape="a. Local Government"), size=3) +
geom_point(aes(parliam, shape="b. Parliament"), size=3)+
geom_point(aes(courts, shape="c. Courts"), size=3)+
geom_point(aes(polpar, shape="d. Political parties"), size=3)+
#geom_point(aes(police, shape="d. Police"), size=3)+
theme(legend.title=element_blank())+
#geom_point(aes(index, shape="e. Trust_average"))+
ggtitle("", sub = "") + ylab("") + xlab("Average") + xlim(1,4)
dev.off()
